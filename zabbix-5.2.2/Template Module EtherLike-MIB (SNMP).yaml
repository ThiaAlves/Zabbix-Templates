zabbix_export:
  version: '5.2'
  date: '2021-06-04T11:21:20Z'
  groups:
    -
      name: Templates/Modules
  templates:
    -
      template: 'Template Module EtherLike-MIB SNMPv2'
      name: 'Template Module EtherLike-MIB SNMPv2'
      description: |
        Template EtherLike-MIB (duplex control only) version: 0.15
        MIBs used:
        EtherLike-MIB
      groups:
        -
          name: Templates/Modules
      applications:
        -
          name: 'Network interfaces'
      discovery_rules:
        -
          name: 'EtherLike-MIB Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SNMPVALUE},1.3.6.1.2.1.10.7.2.1.19,{#IFOPERSTATUS},1.3.6.1.2.1.2.2.1.8,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFDESCR},1.3.6.1.2.1.2.2.1.2]'
          key: net.if.duplex.discovery
          delay: 1h
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#IFOPERSTATUS}'
                value: '1'
                formulaid: A
              -
                macro: '{#SNMPVALUE}'
                value: (2|3)
                formulaid: B
          description: 'Discovering interfaces from IF-MIB and EtherLike-MIB. Interfaces with up(1) Operational Status are discovered.'
          item_prototypes:
            -
              name: 'Interface {#IFNAME}({#IFALIAS}): Duplex status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.10.7.2.1.19.{#SNMPINDEX}'
              key: 'net.if.duplex[dot3StatsDuplexStatus.{#SNMPINDEX}]'
              delay: 5m
              history: 1w
              trends: '0'
              description: |
                MIB: EtherLike-MIB
                The current mode of operation of the MAC
                entity.  'unknown' indicates that the current
                duplex mode could not be determined.
                
                Management control of the duplex mode is
                accomplished through the MAU MIB.  When
                an interface does not support autonegotiation,
                or when autonegotiation is not enabled, the
                duplex mode is controlled using
                ifMauDefaultType.  When autonegotiation is
                supported and enabled, duplex mode is controlled
                using ifMauAutoNegAdvertisedBits.  In either
                case, the currently operating duplex mode is
                reflected both in this object and in ifMauType.
                
                Note that this object provides redundant
                information with ifMauType.  Normally, redundant
                objects are discouraged.  However, in this
                instance, it allows a management application to
                determine the duplex status of an interface
                without having to know every possible value of
                ifMauType.  This was felt to be sufficiently
                valuable to justify the redundancy.
                Reference: [IEEE 802.3 Std.], 30.3.1.1.32,aDuplexStatus.
              applications:
                -
                  name: 'Network interfaces'
              valuemap:
                name: Dot3StatsDuplexStatus
              trigger_prototypes:
                -
                  expression: '{last()}=2'
                  name: 'Interface {#IFNAME}({#IFALIAS}): In half-duplex mode'
                  priority: WARNING
                  description: |
                    Last value: {ITEM.LASTVALUE1}.
                    Please check autonegotiation settings and cabling
                  manual_close: 'YES'
  value_maps:
    -
      name: Dot3StatsDuplexStatus
      mappings:
        -
          value: '1'
          newvalue: Unknown
        -
          value: '2'
          newvalue: halfDuplex
        -
          value: '3'
          newvalue: fullDuplex
