zabbix_export:
  version: '5.4'
  date: '2021-05-28T00:52:21Z'
  groups:
    -
      uuid: 36bff6c29af64692839d077febfc7079
      name: 'Templates/Network devices'
  templates:
    -
      uuid: 26674f62500e4e79b9f470bbf962130d
      template: 'Arista SNMP'
      name: 'Arista SNMP'
      description: |
        Template Net Arista
        
        MIBs used:
        ENTITY-SENSORS-MIB
        ENTITY-STATE-MIB
        ENTITY-MIB
        
        Template tooling version used: 0.38
      templates:
        -
          name: 'EtherLike-MIB SNMP'
        -
          name: 'Generic SNMP'
        -
          name: 'HOST-RESOURCES-MIB SNMP'
        -
          name: 'Interfaces SNMP'
      groups:
        -
          name: 'Templates/Network devices'
      items:
        -
          uuid: 8954dfa9dc4445ad987f764e35c7db6e
          name: 'Get sensors'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SENSOR_TYPE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2,{#SENSOR_PRECISION},1.3.6.1.2.1.99.1.1.1.3,{#THRESHOLD_LO_WARN},1.3.6.1.4.1.30065.3.12.1.1.1.1,{#THRESHOLD_LO_CRIT},1.3.6.1.4.1.30065.3.12.1.1.1.2,{#THRESHOLD_HI_WARN},1.3.6.1.4.1.30065.3.12.1.1.1.3,{#THRESHOLD_HI_CRIT},1.3.6.1.4.1.30065.3.12.1.1.1.4]'
          key: sensors.get
          delay: 1h
          history: '0'
          trends: '0'
          value_type: TEXT
          description: 'Gets sensors with type, description, and thresholds.'
          preprocessing:
            -
              type: JAVASCRIPT
              parameters:
                - |
                  try {
                      var data = JSON.parse(value);
                  }
                  catch (error) {
                      throw 'Failed to parse JSON of Arista sensor discovery.';
                  }
                  var fields = ['{#SNMPINDEX}','{#SENSOR_TYPE}','{#SENSOR_INFO}','{#SENSOR_PRECISION}','{#THRESHOLD_LO_WARN}','{#THRESHOLD_LO_CRIT}','{#THRESHOLD_HI_WARN}','{#THRESHOLD_HI_CRIT}'];
                  data.forEach(function (element) {
                      fields.forEach(function (field) {
                          element[field] = element[field] || '';
                      });
                  });
                  return JSON.stringify(data);
          tags:
            -
              tag: Application
              value: 'Zabbix raw items'
      discovery_rules:
        -
          uuid: 54b839c0606741bfad5c84497cf1d295
          name: 'Entity discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]'
          key: entity.discovery
          delay: 1h
          filter:
            conditions:
              -
                macro: '{#ENT_CLASS}'
                value: '3'
                formulaid: A
          item_prototypes:
            -
              uuid: 161777c6b77c4c91a11e90dda46d4ec5
              name: '{#ENT_NAME}: Hardware model name'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}'
              key: 'system.hw.model[entPhysicalModelName.{#SNMPINDEX}]'
              delay: 1h
              history: 2w
              trends: '0'
              value_type: CHAR
              description: 'MIB: ENTITY-MIB'
              preprocessing:
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 6h
              tags:
                -
                  tag: Application
                  value: Inventory
            -
              uuid: 2f25bd11644d4bd3917d6c6693e74c99
              name: '{#ENT_NAME}: Hardware serial number'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}'
              key: 'system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}]'
              delay: 1h
              history: 2w
              trends: '0'
              value_type: CHAR
              description: 'MIB: ENTITY-MIB'
              preprocessing:
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 6h
              tags:
                -
                  tag: Application
                  value: Inventory
              trigger_prototypes:
                -
                  uuid: 218209a40ec54a489738345c4485be83
                  expression: '(last(/Arista SNMP/system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}],#1)<>last(/Arista SNMP/system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}],#2))=1 and length(last(/Arista SNMP/system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}]))>0'
                  name: '{#ENT_NAME}: Device has been replaced (new serial number received)'
                  priority: INFO
                  description: |
                    Device serial number has changed. Ack to close.
                    Last value: {ITEM.LASTVALUE1}.
                  manual_close: 'YES'
        -
          uuid: c78a9f82601847338d687ed01577e958
          name: 'Fan discovery'
          type: DEPENDENT
          key: fan.discovery
          delay: '0'
          filter:
            evaltype: OR
            conditions:
              -
                macro: '{#SENSOR_TYPE}'
                value: '10'
                formulaid: A
          description: 'ENTITY-SENSORS-MIB::EntitySensorDataType discovery with rpm filter'
          item_prototypes:
            -
              uuid: 7d86974a2de14ce3a254172b6bf0761f
              name: '{#SENSOR_INFO}: Fan speed'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}'
              key: 'sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}]'
              units: rpm
              description: |
                MIB: ENTITY-SENSORS-MIB
                The most recent measurement obtained by the agent for this sensor.
                To correctly interpret the value of this object, the associated entPhySensorType,
                entPhySensorScale, and entPhySensorPrecision objects must also be examined.
              tags:
                -
                  tag: Application
                  value: Fans
              trigger_prototypes:
                -
                  uuid: 660fd32236464fd69409099c67478ff5
                  expression: 'min(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                  name: '{#SENSOR_INFO}: Fan speed is above the critical threshold of {#THRESHOLD_HI_CRIT}rpm for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses fan sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Fan is in critical state'
                      expression: 'count(/Arista SNMP/sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}],#1,"eq","{$FAN_CRIT_STATUS}")=1'
                -
                  uuid: b1131f42627047ca9629693b91d9185e
                  expression: 'min(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_WARN}'
                  name: '{#SENSOR_INFO}: Fan speed is above the warning threshold of {#THRESHOLD_HI_WARN}rpm for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses fan sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Fan is in critical state'
                      expression: 'count(/Arista SNMP/sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}],#1,"eq","{$FAN_CRIT_STATUS}")=1'
                    -
                      name: '{#SENSOR_INFO}: Fan speed is above the critical threshold of {#THRESHOLD_HI_CRIT}rpm for 5m'
                      expression: 'min(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                -
                  uuid: 0cd8e252a77b4c90a155e57aab963e5e
                  expression: 'max(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
                  name: '{#SENSOR_INFO}: Fan speed is below the critical threshold of {#THRESHOLD_LO_CRIT}rpm for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses fan sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Fan is in critical state'
                      expression: 'count(/Arista SNMP/sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}],#1,"eq","{$FAN_CRIT_STATUS}")=1'
                -
                  uuid: d37c360fea9143bab6ff07699ed4acb1
                  expression: 'max(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_WARN}'
                  name: '{#SENSOR_INFO}: Fan speed is below the warning threshold of {#THRESHOLD_LO_WARN}rpm for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses fan sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Fan is in critical state'
                      expression: 'count(/Arista SNMP/sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}],#1,"eq","{$FAN_CRIT_STATUS}")=1'
                    -
                      name: '{#SENSOR_INFO}: Fan speed is below the critical threshold of {#THRESHOLD_LO_CRIT}rpm for 5m'
                      expression: 'max(/Arista SNMP/sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
            -
              uuid: c5e6aaebbf9d467488fdfa1127a31fd7
              name: '{#SENSOR_INFO}: Fan status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}'
              key: 'sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: |
                MIB: ENTITY-SENSORS-MIB
                The operational status of the sensor {#SENSOR_INFO}
              valuemap:
                name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
              tags:
                -
                  tag: Application
                  value: Fans
              trigger_prototypes:
                -
                  uuid: 11dddf9f12a0423bb886808759cd429d
                  expression: 'count(/Arista SNMP/sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}],#1,"eq","{$FAN_CRIT_STATUS}")=1'
                  name: '{#SENSOR_INFO}: Fan is in critical state'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: |
                    Please check the fan unit.
                    Last value: {ITEM.LASTVALUE1}.
          master_item:
            key: sensors.get
          overrides:
            -
              name: 'trigger THRESHOLD_HI_CRIT'
              step: '4'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Fan speed is above the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_HI_WARN'
              step: '3'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Fan speed is above the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_CRIT'
              step: '2'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Fan speed is below the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_WARN'
              step: '1'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Fan speed is below the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
        -
          uuid: 01b83e46160a437da4345824f472cc3b
          name: 'PSU discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]'
          key: psu.discovery
          delay: 1h
          filter:
            conditions:
              -
                macro: '{#ENT_CLASS}'
                value: '6'
                formulaid: A
          item_prototypes:
            -
              uuid: 3ec518948c0d4472b55adc761ef7855d
              name: '{#ENT_NAME}: Power supply status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.131.1.1.1.3.{#SNMPINDEX}'
              key: 'sensor.psu.status[entStateOper.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: 'MIB: ENTITY-STATE-MIB'
              valuemap:
                name: 'ENTITY-STATE-MIB::EntityOperState'
              tags:
                -
                  tag: Application
                  value: 'Power supply'
              trigger_prototypes:
                -
                  uuid: 4faa99278cd94abaace8b09529a6efaa
                  expression: 'count(/Arista SNMP/sensor.psu.status[entStateOper.{#SNMPINDEX}],#1,"eq","{$PSU_CRIT_STATUS}")=1'
                  name: '{#ENT_NAME}: Power supply is in critical state'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: |
                    Please check the power supply unit for errors.
                    Last value: {ITEM.LASTVALUE1}.
        -
          uuid: 50d834b15d7f4755b1ff89ddba90fa4d
          name: 'Temperature discovery'
          type: DEPENDENT
          key: temp.discovery
          delay: '0'
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#SENSOR_TYPE}'
                value: '8'
                formulaid: B
              -
                macro: '{#SENSOR_PRECISION}'
                value: '1'
                formulaid: A
          description: 'ENTITY-SENSORS-MIB::EntitySensorDataType discovery with celsius filter'
          item_prototypes:
            -
              uuid: 2851148fc01c4ba5afb5ab6a3deba5ff
              name: '{#SENSOR_INFO}: Temperature status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}'
              key: 'sensor.temp.status[entPhySensorOperStatus.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: |
                MIB: ENTITY-SENSORS-MIB
                The operational status of the sensor {#SENSOR_INFO}
              valuemap:
                name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
              tags:
                -
                  tag: Application
                  value: Temperature
            -
              uuid: 0f769e8ce0b647989085460beb9a2155
              name: '{#SENSOR_INFO}: Temperature'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}'
              key: 'sensor.temp.value[entPhySensorValue.{#SNMPINDEX}]'
              delay: 3m
              value_type: FLOAT
              units: °C
              description: |
                MIB: ENTITY-SENSORS-MIB
                The most recent measurement obtained by the agent for this sensor.
                To correctly interpret the value of this object, the associated entPhySensorType,
                entPhySensorScale, and entPhySensorPrecision objects must also be examined.
              preprocessing:
                -
                  type: MULTIPLIER
                  parameters:
                    - '0.1'
              tags:
                -
                  tag: Application
                  value: Temperature
              trigger_prototypes:
                -
                  uuid: 791d55e21828472e93c97d8fa4f96d26
                  expression: 'min(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                  name: '{#SENSOR_INFO}: Temperature is above the critical threshold of {#THRESHOLD_HI_CRIT}°C for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses temperature sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                -
                  uuid: c65457a8a6d4427995626ff9ff12e339
                  expression: 'min(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_WARN}'
                  name: '{#SENSOR_INFO}: Temperature is above the warning threshold of {#THRESHOLD_HI_WARN}°C for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses temperature sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Temperature is above the critical threshold of {#THRESHOLD_HI_CRIT}°C for 5m'
                      expression: 'min(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                -
                  uuid: b521cd99d9fb4f6f9d1241ac33c01a86
                  expression: 'max(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
                  name: '{#SENSOR_INFO}: Temperature is below the critical threshold of {#THRESHOLD_LO_CRIT}°C for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses temperature sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                -
                  uuid: 750888bd98fa475dba03591945416b89
                  expression: 'max(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_WARN}'
                  name: '{#SENSOR_INFO}: Temperature is below the warning threshold of {#THRESHOLD_LO_WARN}°C for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses temperature sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Temperature is below the critical threshold of {#THRESHOLD_LO_CRIT}°C for 5m'
                      expression: 'max(/Arista SNMP/sensor.temp.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
          master_item:
            key: sensors.get
          overrides:
            -
              name: 'trigger THRESHOLD_HI_CRIT'
              step: '4'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Temperature is above the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_HI_WARN'
              step: '3'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Temperature is above the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_CRIT'
              step: '2'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Temperature is below the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_WARN'
              step: '1'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Temperature is below the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
        -
          uuid: 3002dbe2caa042dcb2beb058b25500f8
          name: 'Voltage discovery'
          type: DEPENDENT
          key: voltage.discovery
          delay: '0'
          filter:
            evaltype: OR
            conditions:
              -
                macro: '{#SENSOR_TYPE}'
                value: 3|4
                formulaid: A
          description: 'ENTITY-SENSORS-MIB::EntitySensorDataType discovery with volts filter'
          item_prototypes:
            -
              uuid: 7f66af7d12864f2cbaa8a106979ec427
              name: '{#SENSOR_INFO}: Voltage'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}'
              key: 'sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}]'
              value_type: FLOAT
              units: V
              description: |
                MIB: ENTITY-SENSORS-MIB
                The most recent measurement obtained by the agent for this sensor.
                To correctly interpret the value of this object, the associated entPhySensorType,
                entPhySensorScale, and entPhySensorPrecision objects must also be examined.
              tags:
                -
                  tag: Application
                  value: Voltage
              trigger_prototypes:
                -
                  uuid: 1c78dea0380a4bf68b05c1323a208c3a
                  expression: 'min(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                  name: '{#SENSOR_INFO}: Voltage is above the critical threshold of {#THRESHOLD_HI_CRIT}V for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses voltage sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                -
                  uuid: 08b4f59d66ea45eaa95426a27586c4bd
                  expression: 'min(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_WARN}'
                  name: '{#SENSOR_INFO}: Voltage is above the warning threshold of {#THRESHOLD_HI_WARN}V for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses voltage sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Voltage is above the critical threshold of {#THRESHOLD_HI_CRIT}V for 5m'
                      expression: 'min(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) > {#THRESHOLD_HI_CRIT}'
                -
                  uuid: d2df35a764234716a286a8019e6c9411
                  expression: 'max(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
                  name: '{#SENSOR_INFO}: Voltage is below the critical threshold of {#THRESHOLD_LO_CRIT}V for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: |
                    This trigger uses voltage sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                -
                  uuid: 481908babd3f44b3a73f3e0a628fe6d4
                  expression: 'max(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_WARN}'
                  name: '{#SENSOR_INFO}: Voltage is below the warning threshold of {#THRESHOLD_LO_WARN}V for 5m'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    This trigger uses voltage sensor values defined in the device.
                    Last value: {ITEM.LASTVALUE1}.
                  dependencies:
                    -
                      name: '{#SENSOR_INFO}: Voltage is below the critical threshold of {#THRESHOLD_LO_CRIT}V for 5m'
                      expression: 'max(/Arista SNMP/sensor.voltage.value[entPhySensorValue.{#SNMPINDEX}],5m) < {#THRESHOLD_LO_CRIT}'
          master_item:
            key: sensors.get
          overrides:
            -
              name: 'trigger THRESHOLD_HI_CRIT'
              step: '4'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Voltage is above the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_HI_WARN'
              step: '3'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_HI_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Voltage is above the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_CRIT'
              step: '2'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_CRIT}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Voltage is below the critical threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
            -
              name: 'trigger THRESHOLD_LO_WARN'
              step: '1'
              filter:
                conditions:
                  -
                    macro: '{#THRESHOLD_LO_WARN}'
                    value: ^$
                    formulaid: A
              operations:
                -
                  operationobject: TRIGGER_PROTOTYPE
                  operator: REGEXP
                  value: 'Voltage is below the warning threshold'
                  status: ENABLED
                  discover: NO_DISCOVER
      macros:
        -
          macro: '{$FAN_CRIT_STATUS}'
          value: '3'
        -
          macro: '{$MEMORY.NAME.NOT_MATCHES}'
          value: (Buffer|Cache)
          description: 'Filter is overriden to ignore RAM(Cache) and RAM(Buffers) memory objects.'
        -
          macro: '{$PSU_CRIT_STATUS}'
          value: '2'
        -
          macro: '{$VFS.FS.PUSED.MAX.CRIT}'
          value: '95'
        -
          macro: '{$VFS.FS.PUSED.MAX.WARN}'
          value: '90'
      valuemaps:
        -
          uuid: 318f3041aea04848a223de86e589c232
          name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
          mappings:
            -
              value: '1'
              newvalue: ok
            -
              value: '2'
              newvalue: unavailable
            -
              value: '3'
              newvalue: nonoperational
        -
          uuid: 15ba17df88eb435d9d48145fba8d9029
          name: 'ENTITY-STATE-MIB::EntityOperState'
          mappings:
            -
              value: '1'
              newvalue: unknown
            -
              value: '2'
              newvalue: disabled
            -
              value: '3'
              newvalue: enabled
            -
              value: '4'
              newvalue: testing
